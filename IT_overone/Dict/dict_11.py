# Выведите значения возрвста из словаря person.
# person = {'name': 'Kelly', 'age': 25, 'city': 'New York'}
# print(person['age'])


# Создать словарь с ключами BMW, Tesla и кним же по 3 значения ввиде списков. Вывести ключи и их 1-ое и 2-ое значения.
# d = {'BMW': ['Modul1','Modul2','Modul3'],
#      'Tesla': ['ModulA','ModulB','ModulC']
#      }
# print(d['BMW'][::2])
# print(d['Tesla'][::2])


# Дан словарь с числовыми значениями. Необходимо их все перемножить и вывести на экран.
# d = {i:i*2 for i in range(1,5)}
# print(d)
# s = 1
# for i in d.keys():
#     s *= d[i]
# print(s)


# Дан словарь, где ключ - название продукта, значение - список, который содержит цену и кол-во товара.
# Вывести через '-' название, цену и кол-во. С клавиатуры вводится название товара и его кол-во, 'выход' - выход из
# программы. Посчитать цену выбранных товаров и сколько товаров осталось в изначальном списке.
# product.txt = {
#     "молоко": [2.63, 100],
#     "масло": [3.21, 200],
#     'сыр': [7.21, 20],
#     'йогурт': [1.52, 120],
#     'бананы': [2.24, 1000],
#     'киви': [4.25, 215]
#           }
# money = 0
# print('Ассортимент магазина:')
# for i,j in product.txt.items():
#     print(i, '-', j[0],'р')
# while True:
#     s = input('Введите название продукта: ')
#     if s == 'выход':
#         break
#     elif s in product.txt:
#         count = int(input('Введите кол-во продуктов: '))
#         if product.txt[s][-1] - count >= 0:
#             product.txt[s][-1] -= count
#             print('Стоимость покупки: ',product.txt[s][0]*count)
#         else:
#             print('Такого кол-во товара нет на складе')
# for key in product.txt:
#     print(key,'-',product.txt[key][-1],'шт')


# Создайте словарь, связав его с переменной school, и наполните данными, которые бы отражали количество учащихся в
# разных 9 классах (9а, 9б, 9в, 9м, 9ф и т. п.). Внесите изменения в словарь согласно следующему:
# а) в одном из классов изменилось количество учащихся
# б) в школе появился новый класс.
# в) в школе был расформирован (удален) другой класс.
# г) вычислите общее количество учащихся 9 классов в школе.
# d = {
#     '9а':['Рита','Стёпа','Коля'],
#     '9б':['Петя','Вася','Гриша'],
#     '9в':['Настя','Ваня','Саша'],
#     }
# d['9а'] += ['Алеся'] # в одном из классов изменилось количество учащихся
# d['9г'] = ['Света','Артем','Яна'] # в школе появился новый класс.
# del d['9б'] # в школе был расформирован (удален) класс.
# print(len(d['9а']) + len(d['9в']) + len(d['9г'])) # вычислите общее количество учащихся 9 классов в школе.
# print(d)


# Вам дан словарь, состоящий из пар слов. Каждое слово является синонимом к парному ему слову. Все слова в словаре
# различны. Для введённого слова вывести его синоним или написать что его нет.
# d = {
#     'скупой':('жадный'),
#     'кидать':('бросать'),
#     'очи':('глаза'),
#     'спешить':('торопиться'),
#     'неприятель':('враг'),
#     'товарищ':('друг'),
#     }
# a = input()
# if a in d.values() or a in d.keys():
#     for i, j in d.items():
#         if a == i:
#             print(j)
#             break
#         elif a == j:
#             print(i)
#             break
# else:
#     print('Данного слова нет в словаре')


# Коля устал запоминать телефонные номера и заказал у Вас программу, которая заменила бы ему телефонную книгу.
# Коля может послать программе два вида запросов: строку, содержащую имя контакта и его номер, разделенные
# пробелом, или просто имя контакта. В первом случае программа должна добавить в книгу новый номер, во втором –
# вывести номер контакта. Ввод происходит до символа точки. Если введенное имя уже содержится в списке контактов,
# необходимо перезаписать номер.
# d = {
#     'Маруся':'1212',
#     'Таня':'1312',
#     'Вова':'1412',
#     }
# while True:
#     request = input('Введите имя для поиска номера или имя и номер, если хотите создать новый контакт: ')
#     if request == '.':
#         break
#     if ' ' in request:
#         d[request[0:request.find(' ')]] = request[request.find(' ')+1:len(request)]
#     else:
#         if request in d.keys():
#             print(d[request])
#         else:
#             print('Данного имени не существует в телефонной книжке')
# for i in d.items():
#      print(*i)


# Стремясь стать программистом, важно не только постоянно учиться, но и понимать язык, на котором говорят
# Ваши коллеги. Чтобы систематизировать знания, Вы решили написать программу, которая составляет маленький
# словарь из сленговых выражений. Программа принимает на вход строки до символа точки, состоящие из понятий
# и их определений, разделенных знаком тире. После заполнения словаря программе передается натуральное число
# m – количество запросов, а затем m строк, каждая из которых представляет собой одно понятие. Если это понятие
# есть в словаре, необходимо вывести его определение, в обратном случае – "Не найдено".
# d = {
#     'DNS':'это компьютерная распределённая система для получения информации о доменах.',
#     'Интрасеть':'это частная корпоративная сеть, использующая программные продукты и технологии Internet.',
#     'Фича':'это определенная деталь или часть продукта, которая имеет специфические характеристики.',
#     'Мейнфрейм':'это большой универсальный высокопроизводительный отказоустойчивый сервер со значительными ресурсами.'
#     }
# i = 0
# b = int(input())
# while i < b:
#     i += 1
#     a = input()
#     if a == '.':
#         break
#     if a in d:
#         print(d[a])
#     else:
#         print('Данного слова нет в словаре.')


# Когда Антон прочитал «Войну и мир», ему стало интересно, сколько слов и в каком количестве используется
# в этой книге. Помогите Антону написать упрощённую версию такой программы, которая сможет подсчитать слова,
# разделённые пробелом и вывести получившуюся статистику. Программа должна считывать одну строку со стандартного
# ввода и выводить для каждого уникального слова в этой строке число его повторений (без учёта регистра) в формате
# "слово количество". Порядок вывода слов может быть произвольным, каждое уникальное слово﻿ должно выводиться
# только один раз.
# Sample Input 1:               # Sample Output 1:          # Sample Input 2:       # Sample Output 2:
# a aa abC aa ac abc bcd a      # ac 1                      # a A a                 # a 3
                                # a 2
                                # abc 2
                                # bcd 1
                                # aa 2
# d = {}
# a = [i for i in input().split()]
# for i in range(len(a)):
#     count = 1
#     a[i] = a[i].lower()
#     if a[i] not in d.keys():
#         for j in range(i+1,len(a)):
#             if a[i] == a[j].lower():
#                 count += 1
#         d[a[i]] = count
# for key,value in d.items():
#     print(key,value)


# Коля понял, что у многих из его знакомых есть несколько телефонных номеров и нельзя хранить только один из них.
# Он попросил доработать Вашу программу так, чтобы можно было добавлять к существующему контакту новый номер или
# даже несколько номеров, которые передаются через запятую. По запросу телефонного номера должен выводиться весь
# список номеров в порядке добавления, номера должны разделяться запятой. Если у контакта нет телефонных номеров,
# должна выводиться строка "Не найдено".
# Образец ввода:                                    # Пример вывода:
# Ben 89001234050, +70504321009                     # 210-220
# Alice 210-220                                     # 89001234050, +70504321009
# Alice                                             # 210-220, 404-502, 894-005, 439-095
# Alice 404-502, 894-005, 439-095                   # +16507811251
# Nick +16507811251                                 # +4(908)273-22-42
# Ben                                               # 51234047129, 92174043215
# Alex +4(908)273-22-42
# Alice
# Nick
# Robert 51234047129, 92174043215
# Alex
# Robert
# d = {
#     'Маруся':['1212'],
#     'Таня':['1312'],
#     'Вова':['1412'],
#     }
# while True:
#     request = [i for i in input('Введите имя для поиска номера или имя и номер, если хотите создать новый, либо добавить в имеющийся: ').split()]
#     if '.' in request:
#         break
#     if len(request) == 1:
#         if request[0] in d.keys():
#             print(d[request[0]])
#             continue
#         else:
#             isFound = False
#             for name in d.keys():
#                 mylist = d[name]
#                 if request[0] in mylist:
#                     print(*mylist)
#                     isFound = True
#             if not isFound:
#                 print('Не найдено')
#     elif len(request) > 1 and request[0] in d.keys():
#         for i in range(1,len(request)):
#             d[request[0]] += [request[i]]
#     elif len(request) > 1 and request[0] not in d.keys():
#         d[request[0]] = request[1::1]
# for key,values in d.items():
#      print(key,*values, sep=', ')